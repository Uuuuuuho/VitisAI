// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/mean_stddev_box_coder.proto

#include "object_detection/protos/mean_stddev_box_coder.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace object_detection {
namespace protos {
class MeanStddevBoxCoderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MeanStddevBoxCoder> _instance;
} _MeanStddevBoxCoder_default_instance_;
}  // namespace protos
}  // namespace object_detection
static void InitDefaultsscc_info_MeanStddevBoxCoder_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::object_detection::protos::_MeanStddevBoxCoder_default_instance_;
    new (ptr) ::object_detection::protos::MeanStddevBoxCoder();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::object_detection::protos::MeanStddevBoxCoder::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MeanStddevBoxCoder_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_MeanStddevBoxCoder_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::object_detection::protos::MeanStddevBoxCoder, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::object_detection::protos::MeanStddevBoxCoder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::object_detection::protos::MeanStddevBoxCoder, stddev_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::object_detection::protos::MeanStddevBoxCoder)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::object_detection::protos::_MeanStddevBoxCoder_default_instance_),
};

const char descriptor_table_protodef_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n3object_detection/protos/mean_stddev_bo"
  "x_coder.proto\022\027object_detection.protos\"*"
  "\n\022MeanStddevBoxCoder\022\024\n\006stddev\030\001 \001(\002:\0040."
  "01"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto_sccs[1] = {
  &scc_info_MeanStddevBoxCoder_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto_once;
static bool descriptor_table_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto = {
  &descriptor_table_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto_initialized, descriptor_table_protodef_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto, "object_detection/protos/mean_stddev_box_coder.proto", 122,
  &descriptor_table_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto_once, descriptor_table_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto_sccs, descriptor_table_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto::offsets,
  file_level_metadata_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto, 1, file_level_enum_descriptors_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto, file_level_service_descriptors_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto), true);
namespace object_detection {
namespace protos {

// ===================================================================

void MeanStddevBoxCoder::InitAsDefaultInstance() {
}
class MeanStddevBoxCoder::_Internal {
 public:
  using HasBits = decltype(std::declval<MeanStddevBoxCoder>()._has_bits_);
  static void set_has_stddev(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MeanStddevBoxCoder::MeanStddevBoxCoder()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:object_detection.protos.MeanStddevBoxCoder)
}
MeanStddevBoxCoder::MeanStddevBoxCoder(const MeanStddevBoxCoder& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stddev_ = from.stddev_;
  // @@protoc_insertion_point(copy_constructor:object_detection.protos.MeanStddevBoxCoder)
}

void MeanStddevBoxCoder::SharedCtor() {
  stddev_ = 0.01f;
}

MeanStddevBoxCoder::~MeanStddevBoxCoder() {
  // @@protoc_insertion_point(destructor:object_detection.protos.MeanStddevBoxCoder)
  SharedDtor();
}

void MeanStddevBoxCoder::SharedDtor() {
}

void MeanStddevBoxCoder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MeanStddevBoxCoder& MeanStddevBoxCoder::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MeanStddevBoxCoder_object_5fdetection_2fprotos_2fmean_5fstddev_5fbox_5fcoder_2eproto.base);
  return *internal_default_instance();
}


void MeanStddevBoxCoder::Clear() {
// @@protoc_insertion_point(message_clear_start:object_detection.protos.MeanStddevBoxCoder)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stddev_ = 0.01f;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MeanStddevBoxCoder::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional float stddev = 1 [default = 0.01];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          _Internal::set_has_stddev(&has_bits);
          stddev_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MeanStddevBoxCoder::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:object_detection.protos.MeanStddevBoxCoder)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float stddev = 1 [default = 0.01];
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (13 & 0xFF)) {
          _Internal::set_has_stddev(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   float, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &stddev_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:object_detection.protos.MeanStddevBoxCoder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:object_detection.protos.MeanStddevBoxCoder)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MeanStddevBoxCoder::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:object_detection.protos.MeanStddevBoxCoder)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float stddev = 1 [default = 0.01];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloat(1, this->stddev(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:object_detection.protos.MeanStddevBoxCoder)
}

::PROTOBUF_NAMESPACE_ID::uint8* MeanStddevBoxCoder::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:object_detection.protos.MeanStddevBoxCoder)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float stddev = 1 [default = 0.01];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->stddev(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:object_detection.protos.MeanStddevBoxCoder)
  return target;
}

size_t MeanStddevBoxCoder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:object_detection.protos.MeanStddevBoxCoder)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional float stddev = 1 [default = 0.01];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 4;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MeanStddevBoxCoder::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:object_detection.protos.MeanStddevBoxCoder)
  GOOGLE_DCHECK_NE(&from, this);
  const MeanStddevBoxCoder* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MeanStddevBoxCoder>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:object_detection.protos.MeanStddevBoxCoder)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:object_detection.protos.MeanStddevBoxCoder)
    MergeFrom(*source);
  }
}

void MeanStddevBoxCoder::MergeFrom(const MeanStddevBoxCoder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:object_detection.protos.MeanStddevBoxCoder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stddev()) {
    set_stddev(from.stddev());
  }
}

void MeanStddevBoxCoder::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:object_detection.protos.MeanStddevBoxCoder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeanStddevBoxCoder::CopyFrom(const MeanStddevBoxCoder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:object_detection.protos.MeanStddevBoxCoder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeanStddevBoxCoder::IsInitialized() const {
  return true;
}

void MeanStddevBoxCoder::InternalSwap(MeanStddevBoxCoder* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(stddev_, other->stddev_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MeanStddevBoxCoder::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace object_detection
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::object_detection::protos::MeanStddevBoxCoder* Arena::CreateMaybeMessage< ::object_detection::protos::MeanStddevBoxCoder >(Arena* arena) {
  return Arena::CreateInternal< ::object_detection::protos::MeanStddevBoxCoder >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
